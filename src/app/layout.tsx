"use client";
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { useEffect, useState } from "react";
import { Sidebar } from "@/components/ui/sidebar";
import { Store } from "@/models/store.model";
import Header from "./manualComponents/header/Header";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

interface Store {
  _id: string;
  location: string;
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [item, setItem] = useState<string>();

  const infosCards = [
    {
      terminal: {
        name: "Terminal 1",
        card1:
          "Bonjour, voici les informations concernant le Terminal 1. Ceci est la première card",
        card2:
          "Bonjour, voici les informations concernant le Terminal 1. Ceci est la seconde card",
        card3:
          "Bonjour, voici les informations concernant le Terminal 1. Ceci est la troisième card",
        card4:
          "Bonjour, voici les informations concernant le Terminal 1. Ceci est la quatrième card",
      },
    },
    {
      terminal: {
        name: "Terminal 2",
        card1:
          "Bonjour, voici les informations concernant le Terminal 2. Ceci est la première card",
        card2:
          "Bonjour, voici les informations concernant le Terminal 2. Ceci est la seconde card",
        card3:
          "Bonjour, voici les informations concernant le Terminal 2. Ceci est la troisième card",
        card4:
          "Bonjour, voici les informations concernant le Terminal 2. Ceci est la quatrième card",
      },
    },
    {
      terminal: {
        name: "Terminal 3",
        card1:
          "Bonjour, voici les informations concernant le Terminal 3. Ceci est la première card",
        card2:
          "Bonjour, voici les informations concernant le Terminal 3. Ceci est la seconde card",
        card3:
          "Bonjour, voici les informations concernant le Terminal 3. Ceci est la troisième card",
        card4:
          "Bonjour, voici les informations concernant le Terminal 3. Ceci est la quatrième card",
      },
    },
    {
      terminal: {
        name: "Terminal 4",
        card1:
          "Bonjour, voici les informations concernant le Terminal 4. Ceci est la première card",
        card2:
          "Bonjour, voici les informations concernant le Terminal 4. Ceci est la seconde card",
        card3:
          "Bonjour, voici les informations concernant le Terminal 4. Ceci est la troisième card",
        card4:
          "Bonjour, voici les informations concernant le Terminal 4. Ceci est la quatrième card",
      },
    },
  ];

  const [error, setError] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState<boolean | null>(true);

  if (isLoading) {
    <div>...chargement en cours</div>;
  }

  if (error) {
    <div>Erreur : {error}</div>;
  }

  const terminalNames = infosCards.map((item) => item.terminal.name);
  const [stores, setStores] = useState<Store[]>([]);

  useEffect(() => {
    const fetchStores = async () => {
      try {
        const response = await fetch("/api/get-stores");
        if (!response.ok) {
          throw new Error("error comes when tried to catch stores");
        }
        const data = await response.json();
        setStores(data.stores || []);
      } catch (err: any) {
        setError(err.message);
      } finally {
        setIsLoading(false);
      }
    };
    fetchStores();
  }, []);

  console.log(stores);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Header />
        <div className="flex">
          <Sidebar setPage={setItem} terminalName={stores} />
          {children}
        </div>
      </body>
    </html>
  );
}
